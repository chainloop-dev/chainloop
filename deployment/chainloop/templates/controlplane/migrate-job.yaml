apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "chainloop.controlplane.fullname" . }}-migrate
  labels:
    {{- include "chainloop.controlplane.migration.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "chainloop.controlplane.migration.labels" . | nindent 8 }}
    spec:
      {{- with .Values.controlplane.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      serviceAccountName: {{ include "controlplane.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controlplane.podSecurityContext | nindent 8 }}
      containers:
        {{ if .Values.controlplane.sqlProxy.enabled }}
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
          command:
            - "/cloud_sql_proxy"
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            # By default, the proxy will write all logs to stderr. In some
            # environments, anything printed to stderr is consider an error. To
            # disable this behavior and write all logs to stdout (except errors
            # which will still go to stderr), use:
            - "-log_debug_stdout"
            - "-instances={{ .Values.controlplane.sqlProxy.connectionName }}=tcp:5432"
          securityContext:
            runAsNonRoot: true
          resources:
            {{- toYaml .Values.controlplane.sqlProxy.resources | nindent 12 }}
        {{- end }}
        - name: migrate
          image: "{{ .Values.controlplane.migration.image.repository }}:{{ .Values.controlplane.migration.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.controlplane.image.pullPolicy }}
          args:
            - migrate
            - apply
            - --url
            - "{{include "controlplane.database.atlas_connection_string" . }}"
            - --dir
            - file:///migrations