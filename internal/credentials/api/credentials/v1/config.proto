//
// Copyright 2023 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package credentials.v1;
option go_package = "github.com/chainloop-dev/chainloop/internal/credentials/api/credentials/v1;v1";

import "validate/validate.proto";

// Where the credentials to access the backends are stored
message Credentials {
  oneof backend {
    option (validate.required) = true;

    AWSSecretManager aws_secret_manager = 1;
    Vault vault = 2;
    GCPSecretManager gcp_secret_manager = 3;
    AzureKeyVault azure_key_vault = 5;
  }

  // prefix used while writing a new secret
  string secret_prefix = 4;

  // Top level is deprecated now
  message AWSSecretManager {
    Creds creds = 1 [(validate.rules).message.required = true];
    string region = 2 [(validate.rules).string.min_len = 1];

    message Creds {
      string access_key = 1 [(validate.rules).string.min_len = 1];
      string secret_key = 2 [(validate.rules).string.min_len = 1];
    }
  }

  message Vault {
    // TODO: Use application role auth instead
    string token = 1 [(validate.rules).string.min_len = 1];
    // Instance address, including port
    // i.e "http://127.0.0.1:8200"
    string address = 2 [(validate.rules).string.min_len = 1];
    // mount path of the kv engine, default /secret
    string mount_path = 3;
  }

  message GCPSecretManager {
    // project number
    string project_id = 1 [(validate.rules).string.min_len = 1];
    // path to service account key in json format
    string service_account_key = 2;
  }

  message AzureKeyVault {
    // Active Directory Tenant ID
    string tenant_id = 1 [(validate.rules).string.min_len = 1];
    // Registered application / service principal client ID
    string client_id = 2 [(validate.rules).string.min_len = 1];
    // Registered application / service principal client secret
    string client_secret = 3 [(validate.rules).string.min_len = 1];
    // Azure Key Vault URL
    string vault_uri = 4 [(validate.rules).string.uri_ref = true];
  }
}