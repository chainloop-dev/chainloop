project_name: Chainloop
env:
  - CGO_ENABLED=0
  - COMMON_LDFLAGS=-s -w
report_sizes: true
builds:
  - binary: control-plane
    id: control-plane
    main: ./app/controlplane/cmd
    ldflags:
      - "{{ .Env.COMMON_LDFLAGS }}"
      - -X github.com/chainloop-dev/chainloop/app/controlplane/internal/server.Version={{ .Version }}
      - -X main.Version={{ .Version }}
    targets:
      - linux_amd64
  - binary: artifact-cas
    id: artifact-cas
    main: ./app/artifact-cas/cmd
    ldflags:
      - "{{ .Env.COMMON_LDFLAGS }}"
      - -X github.com/chainloop-dev/chainloop/app/artifact-cas/internal/server.Version={{ .Version }}
      - -X main.Version={{ .Version }}
    targets:
      - linux_amd64
  - binary: chainloop
    id: cli
    main: ./app/cli
    ldflags:
      - "{{ .Env.COMMON_LDFLAGS }}"
      - -X github.com/chainloop-dev/chainloop/app/cli/cmd.Version={{ .Version }}
    targets:
      - darwin_amd64
      - darwin_arm64
      - linux_amd64
      - linux_arm64
  # Plugins build
  # NOTE: On the event of a new plugin added to the project you need to
  # 1 - Add the plugins binary to be built in this section
  # 2 - Add the plugin ID to the allow-list in the dockers.IDs section
  # 3 - Update the Dockerfile.goreleaser
  - binary: chainloop-plugin-discord-webhook
    id: chainloop-plugin-discord-webhook
    main: ./app/controlplane/plugins/core/discord-webhook/v1/cmd
    targets:
      - linux_amd64
    ldflags: ["{{ .Env.COMMON_LDFLAGS }}"]
  - binary: chainloop-plugin-smtp
    id: chainloop-plugin-smtp
    main: ./app/controlplane/plugins/core/smtp/v1/cmd
    targets:
      - linux_amd64
    ldflags: ["{{ .Env.COMMON_LDFLAGS }}"]
  - binary: chainloop-plugin-dependency-track
    id: chainloop-plugin-dependency-track
    main: ./app/controlplane/plugins/core/dependency-track/v1/cmd
    targets:
      - linux_amd64
archives:
  - builds:
      - cli
    name_template: "chainloop-cli-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    # Override default to not to include the readme nor license file
    files:
      - none*

checksum:
  name_template: "checksums.txt"

signs:
  # COSIGN_PASSWORD is also required to be present
  - cmd: cosign
    args:
      [
        "sign-blob",
        "--key=env://COSIGN_KEY",
        "--output-signature=${signature}",
        "--yes",
        "${artifact}",
      ]
    artifacts: all

docker_signs:
  # COSIGN_PASSWORD is also required to be present
  - cmd: cosign
    args: ["sign", "--key=env://COSIGN_KEY", "--yes", "${artifact}"]
    artifacts: all

# Build multiplatform images https://goreleaser.com/cookbooks/multi-platform-docker-images/
dockers:
  # control-plane
  - dockerfile: app/controlplane/Dockerfile.goreleaser
    ids:
      - control-plane
      - chainloop-plugin-discord-webhook
      - chainloop-plugin-smtp
      - chainloop-plugin-dependency-track
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
  - dockerfile: app/controlplane/Dockerfile.goreleaser
    ids:
      - control-plane
      - chainloop-plugin-discord-webhook
      - chainloop-plugin-smtp
      - chainloop-plugin-dependency-track
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"

  # migrations: Container image meant to perform migrations on the database at deployment time
  - dockerfile: app/controlplane/Dockerfile.migrations
    extra_files:
      - app/controlplane/pkg/data/ent/migrate/migrations
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
  - dockerfile: app/controlplane/Dockerfile.migrations
    extra_files:
      - app/controlplane/pkg/data/ent/migrate/migrations
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"

  # cas
  - dockerfile: app/artifact-cas/Dockerfile.goreleaser
    ids:
      - artifact-cas
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
  - dockerfile: app/artifact-cas/Dockerfile.goreleaser
    ids:
      - artifact-cas
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"

  # CLI
  - dockerfile: app/cli/Dockerfile.goreleaser
    ids:
      - cli
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
  - dockerfile: app/cli/Dockerfile.goreleaser
    ids:
      - cli
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"

docker_manifests:
  # control-plane
  - name_template: "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/chainloop-dev/chainloop/control-plane:latest"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-arm64"

  # artifact-cas
  - name_template: "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/chainloop-dev/chainloop/artifact-cas:latest"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-arm64"

  # control-plane-migrations
  - name_template: "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:latest"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-arm64"

  # cli
  - name_template: "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/chainloop-dev/chainloop/cli:latest"
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-amd64"
      - "ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-arm64"

release:
  extra_files:
    - glob: ./.github/workflows/cosign.pub
