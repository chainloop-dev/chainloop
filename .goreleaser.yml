project_name: Chainloop
env:
  - CGO_ENABLED=0
builds:
  - binary: control-plane
    id: control-plane
    main: ./app/controlplane/cmd
    ldflags:
      - -X github.com/chainloop-dev/chainloop/app/controlplane/internal/server.Version={{ .Version }}
      - -X main.Version={{ .Version }}
    targets:
      - linux_amd64
    hooks:
      post:
        - upx "{{ .Path }}"
  - binary: artifact-cas
    id: artifact-cas
    main: ./app/artifact-cas/cmd
    ldflags:
      - -X github.com/chainloop-dev/chainloop/app/artifact-cas/internal/server.Version={{ .Version }}
      - -X main.Version={{ .Version }}
    targets:
      - linux_amd64
    hooks:
      post:
        - upx "{{ .Path }}"
  - binary: chainloop
    id: cli
    main: ./app/cli
    ldflags:
      - -X github.com/chainloop-dev/chainloop/app/cli/cmd.Version={{ .Version }}
    targets:
      - darwin_amd64
      - darwin_arm64
      - linux_amd64
      - linux_arm64
    hooks:
      post:
        - upx "{{ .Path }}"
  # Plugins build
  # NOTE: On the event of a new plugin added to the project you need to
  # 1 - Add the plugins binary to be built in this section
  # 2 - Add the plugin ID to the allow-list in the dockers.IDs section
  # 3 - Update the Dockerfile.goreleaser
  - binary: chainloop-plugin-discord-webhook
    id: chainloop-plugin-discord-webhook
    main: ./app/controlplane/plugins/core/discord-webhook/v1/cmd
    targets:
      - linux_amd64
    hooks:
      post:
        - upx "{{ .Path }}"
archives:
  - builds:
      - cli
    name_template: "chainloop-cli-{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    # Override default to not to include the readme nor license file
    files:
      - none*

checksum:
  name_template: "checksums.txt"

signs:
  # COSIGN_PASSWORD is also required to be present
  - cmd: cosign
    args:
      [
        "sign-blob",
        "--key=env://COSIGN_KEY",
        "--output-signature=${signature}",
        "--yes",
        "${artifact}",
      ]
    artifacts: all

docker_signs:
  # COSIGN_PASSWORD is also required to be present
  - cmd: cosign
    args: ["sign", "--key=env://COSIGN_KEY", "--yes", "${artifact}"]
    artifacts: all

dockers:
  - dockerfile: app/controlplane/Dockerfile.goreleaser
    ids:
      - control-plane
      - chainloop-plugin-discord-webhook
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}"
      - "ghcr.io/chainloop-dev/chainloop/control-plane:latest"
  # Container image meant to perform migrations on the database at deployment time
  - dockerfile: app/controlplane/Dockerfile.migrations
    extra_files:
      - app/controlplane/internal/data/ent/migrate/migrations
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}"
  - dockerfile: app/artifact-cas/Dockerfile.goreleaser
    ids:
      - artifact-cas
    image_templates:
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}"
      - "ghcr.io/chainloop-dev/chainloop/artifact-cas:latest"

release:
  extra_files:
    - glob: ./.github/workflows/cosign.pub
