//
// Copyright 2023 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/chainloop-dev/chainloop/app/controlplane/internal/conf;conf";

import "google/protobuf/duration.proto";
import "validate/validate.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Auth auth = 3;
  Observability observability = 4;
  Credentials credentials_service = 5;

  // CAS Server endpoint
  CASServer cas_server = 6;

  message Observability {
    Sentry sentry = 1;
    message Sentry {
      string dsn = 1;
      string environment = 2;
    }
  }

  message CASServer {
    Server.GRPC grpc = 1 [(validate.rules).message.required = true];
    // insecure is used to disable TLS handshake
    // Only use for development purposes!
    bool insecure = 2;
  }
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    // Hostname for the HTTP server to get redirected (deprecated)
    // Optional
    string external_addr = 3 [deprecated = true];
    // In the form of [scheme]://[host] i.e https://instance.chainloop.dev
    // Optional
    string external_url = 4 [(validate.rules).string.uri = true];
    google.protobuf.Duration timeout = 5;
  }

  message GRPC {
    string network = 1;
    string addr = 2 [(validate.rules).string.min_len = 1];
    google.protobuf.Duration timeout = 3;
  }

  HTTP http = 1;
  GRPC grpc = 2;
  // HTTPMetrics defines the HTTP server that exposes prometheus metrics
  HTTP http_metrics = 3;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  Database database = 1;
}

message Auth {
  // Authentication creates a JWT that uses this secret for signing
  string generated_jws_hmac_secret = 2;
  repeated string allow_list = 3;
  string cas_robot_account_private_key_path = 4;
  OIDC oidc = 6;

  message OIDC {
    string domain = 1;
    string client_id = 2;
    string client_secret = 3;
    string redirect_url_scheme = 4;
  }
}

message Credentials {
    oneof backend {
        AWSSecretManager aws_secret_manager = 1;
        Vault vault = 2;
    }

    // Top level is deprecated now
    message AWSSecretManager {
      Creds creds = 1;
      string region = 2;
      string secret_prefix = 3;

      message Creds {
        string access_key = 1;
        string secret_key = 2;
      }
    }

    message Vault {
      // TODO: Use application role auth instead
      string token = 1;
      // Instance address, including port
      // i.e "http://127.0.0.1:8200"
      string address = 2;
      // mount path of the kv engine, default /secret
      string mount_path = 3;
      string secret_prefix = 4;
    }
}