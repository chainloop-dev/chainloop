// Code generated by ent, DO NOT EDIT.

package integrationattachment

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the integrationattachment type in the database.
	Label = "integration_attachment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldConfiguration holds the string denoting the configuration field in the database.
	FieldConfiguration = "configuration"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeIntegration holds the string denoting the integration edge name in mutations.
	EdgeIntegration = "integration"
	// EdgeWorkflow holds the string denoting the workflow edge name in mutations.
	EdgeWorkflow = "workflow"
	// Table holds the table name of the integrationattachment in the database.
	Table = "integration_attachments"
	// IntegrationTable is the table that holds the integration relation/edge.
	IntegrationTable = "integration_attachments"
	// IntegrationInverseTable is the table name for the Integration entity.
	// It exists in this package in order to avoid circular dependency with the "integration" package.
	IntegrationInverseTable = "integrations"
	// IntegrationColumn is the table column denoting the integration relation/edge.
	IntegrationColumn = "integration_attachment_integration"
	// WorkflowTable is the table that holds the workflow relation/edge.
	WorkflowTable = "integration_attachments"
	// WorkflowInverseTable is the table name for the Workflow entity.
	// It exists in this package in order to avoid circular dependency with the "workflow" package.
	WorkflowInverseTable = "workflows"
	// WorkflowColumn is the table column denoting the workflow relation/edge.
	WorkflowColumn = "integration_attachment_workflow"
)

// Columns holds all SQL columns for integrationattachment fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldConfiguration,
	FieldDeletedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "integration_attachments"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"integration_attachment_integration",
	"integration_attachment_workflow",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
