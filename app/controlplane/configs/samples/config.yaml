server:
  grpc:
    tls_config:
      certificate: "./configs/tls/server.crt"
      private_key: "./configs/tls/server.key"

auth:
  # Development credentials for the SSO authentication roundtrip
  oauth:
    client_id: MYID
    client_secret: SECRET
  # HMAC key used to sign the JWTs generated by the controlplane
  generated_jws_hmac_secret: "developmentKey"
  # Private key used to sign the JWTs meant to be consumed by the CAS
  cas_robot_account_private_key_path: "./configs/devkeys/cas.private.key.devel"
  # Optional allow list
  # allow_list:
    # rules:
    #   - miguel@chainloop.dev
    #   - @my-domain.com # This will allow any email from this domain
    # Optional selected routes, empty means all of them
    # selected_routes: ["/controlplane.v1.WorkflowRunService/List"]
    # Optional custom message
    # custom_message: "you need to require access here http://foo.com"

# CAS server where the controlplane will push artifacts to
cas_server:
  grpc:
    addr: 0.0.0.0:9001
  # Where to redirect the user to download artifacts from the CAS
  download_url: http://0.0.0.0:8001/download

# Where to store credentials such as OCI registries or third party integrations secrets
credentials_service:
  vault:
    address: ${VAULT_ADDRESS:http://0.0.0.0:8200}
    token: ${VAULT_TOKEN:notasecret}
  secret_prefix: chainloop-devel
  # aws_secret_manager:
  #   creds:
  #     access_key: not-a-key
  #     secret_key: not-a-secret
  #   region: us-east-1

  # gcp_secret_manager:
  #   project_id: 522312304548
  #   auth_key: "./configs/gcp_auth_key.json"

  # azure_key_vault:
  #   tenant_id: AD-tenant-id
  #   client_id: Service Principal ID
  #   client_secret: Service Principal Secret
  #   vault_uri: https://myvault.vault.azure.net/

# referrer shared index configuration.
# This is used to enable a shared index API endpoint that can be used to discover metadata referrers
# To populate the shared index you need to enable the feature and configure the allowed orgs
# The reason to have an org allowList is to avoid leaking metadata from other organizations
# and set the stage for a trusted publisher model
referrer_shared_index:
  enabled: true
  allowed_orgs:
    - deadbeef

onboarding:
  - name: "read-only-demo"
    role: MEMBERSHIP_ROLE_ORG_VIEWER
  - name: "read-write-demo"
    role: MEMBERSHIP_ROLE_ORG_OWNER

# Certificate authority configuration for key-less scenarios
#certificate_authority:
#  file_ca:
#    cert_path: "../../devel/devkeys/ca.pub"
#    key_path: "../../devel/devkeys/ca.pem"
#    key_pass: chainloop
#
#  ejbca_ca:
#    server_url: "https://localhost/ejbca"
#    key_path: "../../devel/devkeys/superadmin.key"
#    cert_path: "../../devel/devkeys/superadmin.pem"
#    root_ca_path: "../../devel/devkeys/ManagementCA.pem"
#
#    certificate_profile_name: "PlainSigner"
#    end_entity_profile_name: "PlainSigner"
#    certificate_authority_name: "ManagementCA"

# Organizations with Prometheus integration enabled
prometheus_integration:
  - org_name: "my-org"