//
// Copyright 2025 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package controlplane.v1;

import "buf/validate/validate.proto";
import "controlplane/v1/group.proto";
import "controlplane/v1/pagination.proto";
import "controlplane/v1/response_messages.proto";
import "controlplane/v1/shared_message.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/chainloop-dev/chainloop/app/controlplane/api/controlplane/v1;v1";

service ProjectService {
  // Project membership management
  rpc ListMembers(ProjectServiceListMembersRequest) returns (ProjectServiceListMembersResponse);
  rpc AddMember(ProjectServiceAddMemberRequest) returns (ProjectServiceAddMemberResponse);
  rpc RemoveMember(ProjectServiceRemoveMemberRequest) returns (ProjectServiceRemoveMemberResponse);
  rpc UpdateMemberRole(ProjectServiceUpdateMemberRoleRequest) returns (ProjectServiceUpdateMemberRoleResponse);
  rpc ListPendingInvitations(ProjectServiceListPendingInvitationsRequest) returns (ProjectServiceListPendingInvitationsResponse) {}
}

// ProjectServiceListMembersRequest contains the information needed to list members of a project
message ProjectServiceListMembersRequest {
  // IdentityReference is used to specify the project by either its ID or name
  IdentityReference project_reference = 1 [(buf.validate.field).required = true];
  // Pagination parameters to limit and offset results
  OffsetPaginationRequest pagination = 2;
}

// ProjectServiceListMembersResponse contains the list of members in a project
message ProjectServiceListMembersResponse {
  // The list of members in the project
  repeated ProjectMember members = 1;
  // Pagination information for the response
  OffsetPaginationResponse pagination = 2;
}

// ProjectMember represents an user or group who is a member of a project
message ProjectMember {
  // Subject can be either a user or a group
  oneof subject {
    // The user who is a member of the project
    User user = 1;
    // The group who is a member of the project
    Group group = 2;
  }
  // The role of the user in the project
  ProjectMemberRole role = 3;
  // Timestamp when the project membership was created
  google.protobuf.Timestamp created_at = 4;
  // Timestamp when the project membership was last modified
  google.protobuf.Timestamp updated_at = 5;
}

// ProjectServiceAddMemberRequest contains the information needed to add a user to a project
message ProjectServiceAddMemberRequest {
  // IdentityReference is used to specify the project by either its ID or name
  IdentityReference project_reference = 1 [(buf.validate.field).required = true];
  // The membership reference can be a user email or groups references in the future
  ProjectMembershipReference member_reference = 2 [(buf.validate.field).required = true];
  // Indicates if the user should be added as an admin
  ProjectMemberRole role = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).enum = {
      defined_only: true
      not_in: [0]
    }
  ];
}

// ProjectServiceAddMemberResponse contains the result of adding a user to a project
message ProjectServiceAddMemberResponse {}

message ProjectServiceRemoveMemberRequest {
  // IdentityReference is used to specify the project by either its ID or name
  IdentityReference project_reference = 1 [(buf.validate.field).required = true];
  // The membership reference can be a user email or groups references in the future
  ProjectMembershipReference member_reference = 2 [(buf.validate.field).required = true];
}

// ProjectServiceRemoveMemberResponse is returned upon successful removal of a user from a project
message ProjectServiceRemoveMemberResponse {}

// ProjectMembershipReference is used to reference a user or group in the context of project membership
message ProjectMembershipReference {
  // The membership reference can be a user email or groups references in the future
  oneof membership_reference {
    // The user to add to the project
    string user_email = 1 [(buf.validate.field).string.email = true];
    // The group to add to the project
    IdentityReference group_reference = 2;
  }
}

// ProjectMemberRole defines the roles a member can have in a project
enum ProjectMemberRole {
  // Default role for a project member
  PROJECT_MEMBER_ROLE_UNSPECIFIED = 0;
  // Admin role for a project member
  PROJECT_MEMBER_ROLE_ADMIN = 1;
  // Viewer role for a project member
  PROJECT_MEMBER_ROLE_VIEWER = 2;
}

// ProjectServiceUpdateMemberRoleRequest contains the information needed to update a member's role in a project
message ProjectServiceUpdateMemberRoleRequest {
  // IdentityReference is used to specify the project by either its ID or name
  IdentityReference project_reference = 1 [(buf.validate.field).required = true];
  // The membership reference can be a user email or groups references in the future
  ProjectMembershipReference member_reference = 2 [(buf.validate.field).required = true];
  // The new role for the member in the project
  ProjectMemberRole new_role = 3 [(buf.validate.field).required = true];
}

// ProjectServiceUpdateMemberRoleResponse is returned upon successful update of a member's role in a project
message ProjectServiceUpdateMemberRoleResponse {}

message ProjectServiceListPendingInvitationsRequest {
  // IdentityReference is used to specify the project by either its ID or name
  IdentityReference project_reference = 1 [(buf.validate.field).required = true];
  // Pagination parameters to limit and offset results
  OffsetPaginationRequest pagination = 2;
}

// ProjectServiceListPendingInvitationsResponse contains a list of pending invitations for a project
message ProjectServiceListPendingInvitationsResponse {
  // List of pending invitations for the project
  repeated PendingProjectInvitation invitations = 1;
  // Pagination information for the response
  OffsetPaginationResponse pagination = 2;
}

// PendingInvitation represents an invitation to join a project that has not yet been accepted
message PendingProjectInvitation {
  // The email address of the user invited to the project
  string user_email = 1 [(buf.validate.field).string.email = true];
  // The user who sent the invitation
  optional User invited_by = 2;
  // Timestamp when the invitation was created
  google.protobuf.Timestamp created_at = 3;
  // Unique identifier for the invitation
  string invitation_id = 4;
}
