//
// Copyright 2025 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package controlplane.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "controlplane/v1/response_messages.proto";

option go_package = "github.com/chainloop-dev/chainloop/app/controlplane/api/controlplane/v1;v1";

// IdentityReference represents a reference to an identity in the system.
message IdentityReference {
  // ID is optional, but if provided, it must be a valid UUID.
  optional string id = 1 [
    (buf.validate.field).string.uuid = true,
    (buf.validate.field).ignore_empty = true
  ];
  // Name is optional, but if provided, it must be a non-empty string.
  optional string name = 2 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).ignore_empty = true
  ];

  // Custom validation to ensure that either id or name is provided
  option (buf.validate.message).cel = {
    id: "id_or_name_required"
    expression: "!(this.id == '' && this.name == '') && !(this.id != '' && this.name != '')"
    message: "either id or name must be provided, but not both."
  };
}

// Group represents a collection of users with shared access to resources
message Group {
  // Unique identifier for the group
  string id = 1;
  // Human-readable name of the group
  string name = 2;
  // Additional details about the group's purpose
  string description = 3;
  // UUID of the organization that this group belongs to
  string organization_id = 4;
  // Count of members in the group
  int32 member_count = 5;
  // Timestamp when the group was created
  google.protobuf.Timestamp created_at = 6;
  // Timestamp when the group was last modified
  google.protobuf.Timestamp updated_at = 7;
}

// ProjectMember represents an user or group who is a member of a project
message ProjectMember {
  // Subject can be either a user or a group
  oneof subject {
    // The user who is a member of the project
    User user = 1;
    // The group who is a member of the project
    Group group = 2;
  }
  // The role of the user in the project
  ProjectMemberRole role = 3;
  // Timestamp when the project membership was created
  google.protobuf.Timestamp created_at = 4;
  // Timestamp when the project membership was last modified
  google.protobuf.Timestamp updated_at = 5;
  // The ID of latest project version this member is associated with
  string latest_project_version_id = 6;
}

// ProjectMemberRole defines the roles a member can have in a project
enum ProjectMemberRole {
  // Default role for a project member
  PROJECT_MEMBER_ROLE_UNSPECIFIED = 0;
  // Admin role for a project member
  PROJECT_MEMBER_ROLE_ADMIN = 1;
  // Viewer role for a project member
  PROJECT_MEMBER_ROLE_VIEWER = 2;
}
