//
// Copyright 2024 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: controlplane/v1/response_messages.proto

package v1

import (
	v1 "github.com/chainloop-dev/chainloop/app/controlplane/api/workflowcontract/v1"
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunStatus int32

const (
	RunStatus_RUN_STATUS_UNSPECIFIED RunStatus = 0
	RunStatus_RUN_STATUS_INITIALIZED RunStatus = 1
	RunStatus_RUN_STATUS_SUCCEEDED   RunStatus = 2
	RunStatus_RUN_STATUS_FAILED      RunStatus = 3
	RunStatus_RUN_STATUS_EXPIRED     RunStatus = 4
	RunStatus_RUN_STATUS_CANCELLED   RunStatus = 5
)

// Enum value maps for RunStatus.
var (
	RunStatus_name = map[int32]string{
		0: "RUN_STATUS_UNSPECIFIED",
		1: "RUN_STATUS_INITIALIZED",
		2: "RUN_STATUS_SUCCEEDED",
		3: "RUN_STATUS_FAILED",
		4: "RUN_STATUS_EXPIRED",
		5: "RUN_STATUS_CANCELLED",
	}
	RunStatus_value = map[string]int32{
		"RUN_STATUS_UNSPECIFIED": 0,
		"RUN_STATUS_INITIALIZED": 1,
		"RUN_STATUS_SUCCEEDED":   2,
		"RUN_STATUS_FAILED":      3,
		"RUN_STATUS_EXPIRED":     4,
		"RUN_STATUS_CANCELLED":   5,
	}
)

func (x RunStatus) Enum() *RunStatus {
	p := new(RunStatus)
	*p = x
	return p
}

func (x RunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_controlplane_v1_response_messages_proto_enumTypes[0].Descriptor()
}

func (RunStatus) Type() protoreflect.EnumType {
	return &file_controlplane_v1_response_messages_proto_enumTypes[0]
}

func (x RunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunStatus.Descriptor instead.
func (RunStatus) EnumDescriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{0}
}

type MembershipRole int32

const (
	MembershipRole_MEMBERSHIP_ROLE_UNSPECIFIED MembershipRole = 0
	MembershipRole_MEMBERSHIP_ROLE_ORG_VIEWER  MembershipRole = 1
	MembershipRole_MEMBERSHIP_ROLE_ORG_ADMIN   MembershipRole = 2
	MembershipRole_MEMBERSHIP_ROLE_ORG_OWNER   MembershipRole = 3
)

// Enum value maps for MembershipRole.
var (
	MembershipRole_name = map[int32]string{
		0: "MEMBERSHIP_ROLE_UNSPECIFIED",
		1: "MEMBERSHIP_ROLE_ORG_VIEWER",
		2: "MEMBERSHIP_ROLE_ORG_ADMIN",
		3: "MEMBERSHIP_ROLE_ORG_OWNER",
	}
	MembershipRole_value = map[string]int32{
		"MEMBERSHIP_ROLE_UNSPECIFIED": 0,
		"MEMBERSHIP_ROLE_ORG_VIEWER":  1,
		"MEMBERSHIP_ROLE_ORG_ADMIN":   2,
		"MEMBERSHIP_ROLE_ORG_OWNER":   3,
	}
)

func (x MembershipRole) Enum() *MembershipRole {
	p := new(MembershipRole)
	*p = x
	return p
}

func (x MembershipRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MembershipRole) Descriptor() protoreflect.EnumDescriptor {
	return file_controlplane_v1_response_messages_proto_enumTypes[1].Descriptor()
}

func (MembershipRole) Type() protoreflect.EnumType {
	return &file_controlplane_v1_response_messages_proto_enumTypes[1]
}

func (x MembershipRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MembershipRole.Descriptor instead.
func (MembershipRole) EnumDescriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{1}
}

type AllowListError int32

const (
	AllowListError_ALLOW_LIST_ERROR_UNSPECIFIED AllowListError = 0
	AllowListError_ALLOW_LIST_ERROR_NOT_IN_LIST AllowListError = 1
)

// Enum value maps for AllowListError.
var (
	AllowListError_name = map[int32]string{
		0: "ALLOW_LIST_ERROR_UNSPECIFIED",
		1: "ALLOW_LIST_ERROR_NOT_IN_LIST",
	}
	AllowListError_value = map[string]int32{
		"ALLOW_LIST_ERROR_UNSPECIFIED": 0,
		"ALLOW_LIST_ERROR_NOT_IN_LIST": 1,
	}
)

func (x AllowListError) Enum() *AllowListError {
	p := new(AllowListError)
	*p = x
	return p
}

func (x AllowListError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllowListError) Descriptor() protoreflect.EnumDescriptor {
	return file_controlplane_v1_response_messages_proto_enumTypes[2].Descriptor()
}

func (AllowListError) Type() protoreflect.EnumType {
	return &file_controlplane_v1_response_messages_proto_enumTypes[2]
}

func (x AllowListError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AllowListError.Descriptor instead.
func (AllowListError) EnumDescriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{2}
}

type CASBackendItem_ValidationStatus int32

const (
	CASBackendItem_VALIDATION_STATUS_UNSPECIFIED CASBackendItem_ValidationStatus = 0
	CASBackendItem_VALIDATION_STATUS_OK          CASBackendItem_ValidationStatus = 1
	CASBackendItem_VALIDATION_STATUS_INVALID     CASBackendItem_ValidationStatus = 2
)

// Enum value maps for CASBackendItem_ValidationStatus.
var (
	CASBackendItem_ValidationStatus_name = map[int32]string{
		0: "VALIDATION_STATUS_UNSPECIFIED",
		1: "VALIDATION_STATUS_OK",
		2: "VALIDATION_STATUS_INVALID",
	}
	CASBackendItem_ValidationStatus_value = map[string]int32{
		"VALIDATION_STATUS_UNSPECIFIED": 0,
		"VALIDATION_STATUS_OK":          1,
		"VALIDATION_STATUS_INVALID":     2,
	}
)

func (x CASBackendItem_ValidationStatus) Enum() *CASBackendItem_ValidationStatus {
	p := new(CASBackendItem_ValidationStatus)
	*p = x
	return p
}

func (x CASBackendItem_ValidationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CASBackendItem_ValidationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_controlplane_v1_response_messages_proto_enumTypes[3].Descriptor()
}

func (CASBackendItem_ValidationStatus) Type() protoreflect.EnumType {
	return &file_controlplane_v1_response_messages_proto_enumTypes[3]
}

func (x CASBackendItem_ValidationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CASBackendItem_ValidationStatus.Descriptor instead.
func (CASBackendItem_ValidationStatus) EnumDescriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{8, 0}
}

type WorkflowItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Project    string                 `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	Team       string                 `protobuf:"bytes,4,opt,name=team,proto3" json:"team,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RunsCount  int32                  `protobuf:"varint,6,opt,name=runs_count,json=runsCount,proto3" json:"runs_count,omitempty"`
	LastRun    *WorkflowRunItem       `protobuf:"bytes,7,opt,name=last_run,json=lastRun,proto3" json:"last_run,omitempty"`
	ContractId string                 `protobuf:"bytes,8,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// Current, latest revision of the contract
	ContractRevisionLatest int32 `protobuf:"varint,11,opt,name=contract_revision_latest,json=contractRevisionLatest,proto3" json:"contract_revision_latest,omitempty"`
	// A public workflow means that any user can
	// - access to all its workflow runs
	// - their attestation and materials
	Public      bool   `protobuf:"varint,9,opt,name=public,proto3" json:"public,omitempty"`
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *WorkflowItem) Reset() {
	*x = WorkflowItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowItem) ProtoMessage() {}

func (x *WorkflowItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowItem.ProtoReflect.Descriptor instead.
func (*WorkflowItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{0}
}

func (x *WorkflowItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowItem) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *WorkflowItem) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *WorkflowItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowItem) GetRunsCount() int32 {
	if x != nil {
		return x.RunsCount
	}
	return 0
}

func (x *WorkflowItem) GetLastRun() *WorkflowRunItem {
	if x != nil {
		return x.LastRun
	}
	return nil
}

func (x *WorkflowItem) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *WorkflowItem) GetContractRevisionLatest() int32 {
	if x != nil {
		return x.ContractRevisionLatest
	}
	return 0
}

func (x *WorkflowItem) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *WorkflowItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type WorkflowRunItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	// TODO: use runStatus enum below
	// deprecated field, use status instead
	//
	// Deprecated: Marked as deprecated in controlplane/v1/response_messages.proto.
	State    string        `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Status   RunStatus     `protobuf:"varint,12,opt,name=status,proto3,enum=controlplane.v1.RunStatus" json:"status,omitempty"`
	Reason   string        `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	Workflow *WorkflowItem `protobuf:"bytes,6,opt,name=workflow,proto3" json:"workflow,omitempty"`
	JobUrl   string        `protobuf:"bytes,7,opt,name=job_url,json=jobUrl,proto3" json:"job_url,omitempty"`
	// string runner_type = 8;
	RunnerType      v1.CraftingSchema_Runner_RunnerType `protobuf:"varint,8,opt,name=runner_type,json=runnerType,proto3,enum=workflowcontract.v1.CraftingSchema_Runner_RunnerType" json:"runner_type,omitempty"`
	ContractVersion *WorkflowContractVersionItem        `protobuf:"bytes,9,opt,name=contract_version,json=contractVersion,proto3" json:"contract_version,omitempty"`
	// The revision of the contract used for this run
	ContractRevisionUsed int32 `protobuf:"varint,10,opt,name=contract_revision_used,json=contractRevisionUsed,proto3" json:"contract_revision_used,omitempty"`
	// The latest revision available for this contract at the time of the run
	ContractRevisionLatest int32 `protobuf:"varint,11,opt,name=contract_revision_latest,json=contractRevisionLatest,proto3" json:"contract_revision_latest,omitempty"`
}

func (x *WorkflowRunItem) Reset() {
	*x = WorkflowRunItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowRunItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowRunItem) ProtoMessage() {}

func (x *WorkflowRunItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowRunItem.ProtoReflect.Descriptor instead.
func (*WorkflowRunItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowRunItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowRunItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowRunItem) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

// Deprecated: Marked as deprecated in controlplane/v1/response_messages.proto.
func (x *WorkflowRunItem) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WorkflowRunItem) GetStatus() RunStatus {
	if x != nil {
		return x.Status
	}
	return RunStatus_RUN_STATUS_UNSPECIFIED
}

func (x *WorkflowRunItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WorkflowRunItem) GetWorkflow() *WorkflowItem {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *WorkflowRunItem) GetJobUrl() string {
	if x != nil {
		return x.JobUrl
	}
	return ""
}

func (x *WorkflowRunItem) GetRunnerType() v1.CraftingSchema_Runner_RunnerType {
	if x != nil {
		return x.RunnerType
	}
	return v1.CraftingSchema_Runner_RunnerType(0)
}

func (x *WorkflowRunItem) GetContractVersion() *WorkflowContractVersionItem {
	if x != nil {
		return x.ContractVersion
	}
	return nil
}

func (x *WorkflowRunItem) GetContractRevisionUsed() int32 {
	if x != nil {
		return x.ContractRevisionUsed
	}
	return 0
}

func (x *WorkflowRunItem) GetContractRevisionLatest() int32 {
	if x != nil {
		return x.ContractRevisionLatest
	}
	return 0
}

type AttestationItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// encoded DSEE envelope
	Envelope []byte `protobuf:"bytes,3,opt,name=envelope,proto3" json:"envelope,omitempty"`
	// sha256sum of the envelope in json format, used as a key in the CAS backend
	DigestInCasBackend string `protobuf:"bytes,7,opt,name=digest_in_cas_backend,json=digestInCasBackend,proto3" json:"digest_in_cas_backend,omitempty"`
	// denormalized envelope/statement content
	EnvVars     []*AttestationItem_EnvVariable `protobuf:"bytes,4,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	Materials   []*AttestationItem_Material    `protobuf:"bytes,5,rep,name=materials,proto3" json:"materials,omitempty"`
	Annotations map[string]string              `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AttestationItem) Reset() {
	*x = AttestationItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationItem) ProtoMessage() {}

func (x *AttestationItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationItem.ProtoReflect.Descriptor instead.
func (*AttestationItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{2}
}

func (x *AttestationItem) GetEnvelope() []byte {
	if x != nil {
		return x.Envelope
	}
	return nil
}

func (x *AttestationItem) GetDigestInCasBackend() string {
	if x != nil {
		return x.DigestInCasBackend
	}
	return ""
}

func (x *AttestationItem) GetEnvVars() []*AttestationItem_EnvVariable {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *AttestationItem) GetMaterials() []*AttestationItem_Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *AttestationItem) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type WorkflowContractItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LatestRevision int32                  `protobuf:"varint,4,opt,name=latest_revision,json=latestRevision,proto3" json:"latest_revision,omitempty"`
	// Workflows associated with this contract
	WorkflowIds []string `protobuf:"bytes,5,rep,name=workflow_ids,json=workflowIds,proto3" json:"workflow_ids,omitempty"`
}

func (x *WorkflowContractItem) Reset() {
	*x = WorkflowContractItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowContractItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowContractItem) ProtoMessage() {}

func (x *WorkflowContractItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowContractItem.ProtoReflect.Descriptor instead.
func (*WorkflowContractItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{3}
}

func (x *WorkflowContractItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowContractItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowContractItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkflowContractItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WorkflowContractItem) GetLatestRevision() int32 {
	if x != nil {
		return x.LatestRevision
	}
	return 0
}

func (x *WorkflowContractItem) GetWorkflowIds() []string {
	if x != nil {
		return x.WorkflowIds
	}
	return nil
}

type WorkflowContractVersionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Revision  int32                  `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are assignable to Contract:
	//
	//	*WorkflowContractVersionItem_V1
	Contract isWorkflowContractVersionItem_Contract `protobuf_oneof:"contract"`
}

func (x *WorkflowContractVersionItem) Reset() {
	*x = WorkflowContractVersionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowContractVersionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowContractVersionItem) ProtoMessage() {}

func (x *WorkflowContractVersionItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowContractVersionItem.ProtoReflect.Descriptor instead.
func (*WorkflowContractVersionItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowContractVersionItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkflowContractVersionItem) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *WorkflowContractVersionItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (m *WorkflowContractVersionItem) GetContract() isWorkflowContractVersionItem_Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (x *WorkflowContractVersionItem) GetV1() *v1.CraftingSchema {
	if x, ok := x.GetContract().(*WorkflowContractVersionItem_V1); ok {
		return x.V1
	}
	return nil
}

type isWorkflowContractVersionItem_Contract interface {
	isWorkflowContractVersionItem_Contract()
}

type WorkflowContractVersionItem_V1 struct {
	V1 *v1.CraftingSchema `protobuf:"bytes,4,opt,name=v1,proto3,oneof"`
}

func (*WorkflowContractVersionItem_V1) isWorkflowContractVersionItem_Contract() {}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email     string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type OrgMembershipItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Org       *OrgItem               `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
	User      *User                  `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Current   bool                   `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Role      MembershipRole         `protobuf:"varint,6,opt,name=role,proto3,enum=controlplane.v1.MembershipRole" json:"role,omitempty"`
}

func (x *OrgMembershipItem) Reset() {
	*x = OrgMembershipItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgMembershipItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgMembershipItem) ProtoMessage() {}

func (x *OrgMembershipItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgMembershipItem.ProtoReflect.Descriptor instead.
func (*OrgMembershipItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{6}
}

func (x *OrgMembershipItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgMembershipItem) GetOrg() *OrgItem {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *OrgMembershipItem) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *OrgMembershipItem) GetCurrent() bool {
	if x != nil {
		return x.Current
	}
	return false
}

func (x *OrgMembershipItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrgMembershipItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *OrgMembershipItem) GetRole() MembershipRole {
	if x != nil {
		return x.Role
	}
	return MembershipRole_MEMBERSHIP_ROLE_UNSPECIFIED
}

type OrgItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *OrgItem) Reset() {
	*x = OrgItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgItem) ProtoMessage() {}

func (x *OrgItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgItem.ProtoReflect.Descriptor instead.
func (*OrgItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{7}
}

func (x *OrgItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CASBackendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// e.g. myregistry.io/myrepo s3 bucket and so on
	Location         string                          `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Description      string                          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt        *timestamppb.Timestamp          `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ValidatedAt      *timestamppb.Timestamp          `protobuf:"bytes,5,opt,name=validated_at,json=validatedAt,proto3" json:"validated_at,omitempty"`
	ValidationStatus CASBackendItem_ValidationStatus `protobuf:"varint,6,opt,name=validation_status,json=validationStatus,proto3,enum=controlplane.v1.CASBackendItem_ValidationStatus" json:"validation_status,omitempty"`
	// OCI, S3, ...
	Provider string `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider,omitempty"`
	// Wether it's the default backend in the organization
	Default bool `protobuf:"varint,8,opt,name=default,proto3" json:"default,omitempty"`
	// Limits for this backend
	Limits *CASBackendItem_Limits `protobuf:"bytes,9,opt,name=limits,proto3" json:"limits,omitempty"`
	// Is it an inline backend?
	// inline means that the content is stored in the attestation itself
	IsInline bool `protobuf:"varint,10,opt,name=is_inline,json=isInline,proto3" json:"is_inline,omitempty"`
}

func (x *CASBackendItem) Reset() {
	*x = CASBackendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASBackendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASBackendItem) ProtoMessage() {}

func (x *CASBackendItem) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASBackendItem.ProtoReflect.Descriptor instead.
func (*CASBackendItem) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{8}
}

func (x *CASBackendItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CASBackendItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CASBackendItem) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CASBackendItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CASBackendItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CASBackendItem) GetValidatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidatedAt
	}
	return nil
}

func (x *CASBackendItem) GetValidationStatus() CASBackendItem_ValidationStatus {
	if x != nil {
		return x.ValidationStatus
	}
	return CASBackendItem_VALIDATION_STATUS_UNSPECIFIED
}

func (x *CASBackendItem) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CASBackendItem) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *CASBackendItem) GetLimits() *CASBackendItem_Limits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *CASBackendItem) GetIsInline() bool {
	if x != nil {
		return x.IsInline
	}
	return false
}

type AttestationItem_EnvVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AttestationItem_EnvVariable) Reset() {
	*x = AttestationItem_EnvVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationItem_EnvVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationItem_EnvVariable) ProtoMessage() {}

func (x *AttestationItem_EnvVariable) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationItem_EnvVariable.ProtoReflect.Descriptor instead.
func (*AttestationItem_EnvVariable) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AttestationItem_EnvVariable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttestationItem_EnvVariable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AttestationItem_Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This might be the raw value, the container image name, the filename and so on
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// filename of the artifact that was either uploaded or injected inline in "value"
	Filename string `protobuf:"bytes,8,opt,name=filename,proto3" json:"filename,omitempty"`
	// Material type, i.e ARTIFACT
	Type        string            `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Annotations map[string]string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Hash        string            `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	// it's been uploaded to an actual CAS backend
	UploadedToCas bool `protobuf:"varint,6,opt,name=uploaded_to_cas,json=uploadedToCas,proto3" json:"uploaded_to_cas,omitempty"`
	// the content instead if inline
	EmbeddedInline bool `protobuf:"varint,7,opt,name=embedded_inline,json=embeddedInline,proto3" json:"embedded_inline,omitempty"`
}

func (x *AttestationItem_Material) Reset() {
	*x = AttestationItem_Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationItem_Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationItem_Material) ProtoMessage() {}

func (x *AttestationItem_Material) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationItem_Material.ProtoReflect.Descriptor instead.
func (*AttestationItem_Material) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{2, 2}
}

func (x *AttestationItem_Material) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttestationItem_Material) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AttestationItem_Material) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *AttestationItem_Material) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AttestationItem_Material) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *AttestationItem_Material) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *AttestationItem_Material) GetUploadedToCas() bool {
	if x != nil {
		return x.UploadedToCas
	}
	return false
}

func (x *AttestationItem_Material) GetEmbeddedInline() bool {
	if x != nil {
		return x.EmbeddedInline
	}
	return false
}

type CASBackendItem_Limits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max number of bytes allowed to be stored in this backend
	MaxBytes int64 `protobuf:"varint,1,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
}

func (x *CASBackendItem_Limits) Reset() {
	*x = CASBackendItem_Limits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controlplane_v1_response_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CASBackendItem_Limits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASBackendItem_Limits) ProtoMessage() {}

func (x *CASBackendItem_Limits) ProtoReflect() protoreflect.Message {
	mi := &file_controlplane_v1_response_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASBackendItem_Limits.ProtoReflect.Descriptor instead.
func (*CASBackendItem_Limits) Descriptor() ([]byte, []int) {
	return file_controlplane_v1_response_messages_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CASBackendItem_Limits) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

var File_controlplane_v1_response_messages_proto protoreflect.FileDescriptor

var file_controlplane_v1_response_messages_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x29, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x03, 0x0a, 0x0c,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x75, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x75, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x75, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf4, 0x04, 0x0a, 0x0f, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x55, 0x72, 0x6c,
	0x12, 0x56, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x61, 0x66,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x22, 0xaa, 0x06, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x63,
	0x61, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x43, 0x61, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x47, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x47, 0x0a,
	0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x53, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x0b, 0x45,
	0x6e, 0x76, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0xe7, 0x02, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x61, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x54, 0x6f, 0x43, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x3e,
	0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe3,
	0x01, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x1b, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x02, 0x76,
	0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x02,
	0x76, 0x31, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x67,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbf, 0x02, 0x0a, 0x11, 0x4f, 0x72, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x03, 0x6f, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x68, 0x0a, 0x07, 0x4f, 0x72, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xf5, 0x04, 0x0a, 0x0e, 0x43, 0x41, 0x53, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x5d, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x41, 0x53, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x41, 0x53, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52,
	0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x25, 0x0a, 0x06, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x10, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x21, 0x0a, 0x1d, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0xa6, 0x01, 0x0a, 0x09,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x55, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52,
	0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x55,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x05, 0x2a, 0x8f, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x5f,
	0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x5f, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x60, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x4c, 0x4c, 0x4f,
	0x57, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x1c, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45,
	0x93, 0x03, 0x1a, 0x04, 0xa0, 0x45, 0xf4, 0x03, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x6f, 0x6f, 0x70,
	0x2d, 0x64, 0x65, 0x76, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x61,
	0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_controlplane_v1_response_messages_proto_rawDescOnce sync.Once
	file_controlplane_v1_response_messages_proto_rawDescData = file_controlplane_v1_response_messages_proto_rawDesc
)

func file_controlplane_v1_response_messages_proto_rawDescGZIP() []byte {
	file_controlplane_v1_response_messages_proto_rawDescOnce.Do(func() {
		file_controlplane_v1_response_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_controlplane_v1_response_messages_proto_rawDescData)
	})
	return file_controlplane_v1_response_messages_proto_rawDescData
}

var file_controlplane_v1_response_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_controlplane_v1_response_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_controlplane_v1_response_messages_proto_goTypes = []interface{}{
	(RunStatus)(0),                           // 0: controlplane.v1.RunStatus
	(MembershipRole)(0),                      // 1: controlplane.v1.MembershipRole
	(AllowListError)(0),                      // 2: controlplane.v1.AllowListError
	(CASBackendItem_ValidationStatus)(0),     // 3: controlplane.v1.CASBackendItem.ValidationStatus
	(*WorkflowItem)(nil),                     // 4: controlplane.v1.WorkflowItem
	(*WorkflowRunItem)(nil),                  // 5: controlplane.v1.WorkflowRunItem
	(*AttestationItem)(nil),                  // 6: controlplane.v1.AttestationItem
	(*WorkflowContractItem)(nil),             // 7: controlplane.v1.WorkflowContractItem
	(*WorkflowContractVersionItem)(nil),      // 8: controlplane.v1.WorkflowContractVersionItem
	(*User)(nil),                             // 9: controlplane.v1.User
	(*OrgMembershipItem)(nil),                // 10: controlplane.v1.OrgMembershipItem
	(*OrgItem)(nil),                          // 11: controlplane.v1.OrgItem
	(*CASBackendItem)(nil),                   // 12: controlplane.v1.CASBackendItem
	nil,                                      // 13: controlplane.v1.AttestationItem.AnnotationsEntry
	(*AttestationItem_EnvVariable)(nil),      // 14: controlplane.v1.AttestationItem.EnvVariable
	(*AttestationItem_Material)(nil),         // 15: controlplane.v1.AttestationItem.Material
	nil,                                      // 16: controlplane.v1.AttestationItem.Material.AnnotationsEntry
	(*CASBackendItem_Limits)(nil),            // 17: controlplane.v1.CASBackendItem.Limits
	(*timestamppb.Timestamp)(nil),            // 18: google.protobuf.Timestamp
	(v1.CraftingSchema_Runner_RunnerType)(0), // 19: workflowcontract.v1.CraftingSchema.Runner.RunnerType
	(*v1.CraftingSchema)(nil),                // 20: workflowcontract.v1.CraftingSchema
}
var file_controlplane_v1_response_messages_proto_depIdxs = []int32{
	18, // 0: controlplane.v1.WorkflowItem.created_at:type_name -> google.protobuf.Timestamp
	5,  // 1: controlplane.v1.WorkflowItem.last_run:type_name -> controlplane.v1.WorkflowRunItem
	18, // 2: controlplane.v1.WorkflowRunItem.created_at:type_name -> google.protobuf.Timestamp
	18, // 3: controlplane.v1.WorkflowRunItem.finished_at:type_name -> google.protobuf.Timestamp
	0,  // 4: controlplane.v1.WorkflowRunItem.status:type_name -> controlplane.v1.RunStatus
	4,  // 5: controlplane.v1.WorkflowRunItem.workflow:type_name -> controlplane.v1.WorkflowItem
	19, // 6: controlplane.v1.WorkflowRunItem.runner_type:type_name -> workflowcontract.v1.CraftingSchema.Runner.RunnerType
	8,  // 7: controlplane.v1.WorkflowRunItem.contract_version:type_name -> controlplane.v1.WorkflowContractVersionItem
	14, // 8: controlplane.v1.AttestationItem.env_vars:type_name -> controlplane.v1.AttestationItem.EnvVariable
	15, // 9: controlplane.v1.AttestationItem.materials:type_name -> controlplane.v1.AttestationItem.Material
	13, // 10: controlplane.v1.AttestationItem.annotations:type_name -> controlplane.v1.AttestationItem.AnnotationsEntry
	18, // 11: controlplane.v1.WorkflowContractItem.created_at:type_name -> google.protobuf.Timestamp
	18, // 12: controlplane.v1.WorkflowContractVersionItem.created_at:type_name -> google.protobuf.Timestamp
	20, // 13: controlplane.v1.WorkflowContractVersionItem.v1:type_name -> workflowcontract.v1.CraftingSchema
	18, // 14: controlplane.v1.User.created_at:type_name -> google.protobuf.Timestamp
	11, // 15: controlplane.v1.OrgMembershipItem.org:type_name -> controlplane.v1.OrgItem
	9,  // 16: controlplane.v1.OrgMembershipItem.user:type_name -> controlplane.v1.User
	18, // 17: controlplane.v1.OrgMembershipItem.created_at:type_name -> google.protobuf.Timestamp
	18, // 18: controlplane.v1.OrgMembershipItem.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 19: controlplane.v1.OrgMembershipItem.role:type_name -> controlplane.v1.MembershipRole
	18, // 20: controlplane.v1.OrgItem.created_at:type_name -> google.protobuf.Timestamp
	18, // 21: controlplane.v1.CASBackendItem.created_at:type_name -> google.protobuf.Timestamp
	18, // 22: controlplane.v1.CASBackendItem.validated_at:type_name -> google.protobuf.Timestamp
	3,  // 23: controlplane.v1.CASBackendItem.validation_status:type_name -> controlplane.v1.CASBackendItem.ValidationStatus
	17, // 24: controlplane.v1.CASBackendItem.limits:type_name -> controlplane.v1.CASBackendItem.Limits
	16, // 25: controlplane.v1.AttestationItem.Material.annotations:type_name -> controlplane.v1.AttestationItem.Material.AnnotationsEntry
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_controlplane_v1_response_messages_proto_init() }
func file_controlplane_v1_response_messages_proto_init() {
	if File_controlplane_v1_response_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_controlplane_v1_response_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowRunItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowContractItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowContractVersionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgMembershipItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASBackendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationItem_EnvVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationItem_Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controlplane_v1_response_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CASBackendItem_Limits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_controlplane_v1_response_messages_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*WorkflowContractVersionItem_V1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_controlplane_v1_response_messages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controlplane_v1_response_messages_proto_goTypes,
		DependencyIndexes: file_controlplane_v1_response_messages_proto_depIdxs,
		EnumInfos:         file_controlplane_v1_response_messages_proto_enumTypes,
		MessageInfos:      file_controlplane_v1_response_messages_proto_msgTypes,
	}.Build()
	File_controlplane_v1_response_messages_proto = out.File
	file_controlplane_v1_response_messages_proto_rawDesc = nil
	file_controlplane_v1_response_messages_proto_goTypes = nil
	file_controlplane_v1_response_messages_proto_depIdxs = nil
}
