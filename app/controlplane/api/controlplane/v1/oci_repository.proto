//
// Copyright 2023 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package controlplane.v1;

option go_package = "github.com/chainloop-dev/chainloop/app/controlplane/api/controlplane/v1;v1";
import "validate/validate.proto";
import "errors/v1/errors.proto";

service OCIRepositoryService {
	// Save the OCI repository overriding the existing one (for now)
	rpc Save (OCIRepositoryServiceSaveRequest) returns (OCIRepositoryServiceSaveResponse) {
		// Will get replaced by CASBackends API endpoint
		// We are maintaining this for compatibility reasons with old CLIs
		option deprecated = true;
	}
}

message OCIRepositoryServiceSaveRequest {
	// FQDN of the OCI repository, including paths
	string repository = 1 [(validate.rules).string.min_len = 1];

	oneof credentials {
		option (validate.required) = true;
		Keypair key_pair = 2;
	}

	message Keypair {
		string username = 1 [(validate.rules).string.min_len = 1];
		string password = 2 [(validate.rules).string.min_len = 1];
	}

}

message OCIRepositoryServiceSaveResponse {}

enum OCIRepositoryErrorReason {
  option (errors.v1.default_code) = 500;
  // TODO: add support for PRECONDITION_FAILED
  OCI_REPOSITORY_ERROR_REASON_UNSPECIFIED = 0;
  OCI_REPOSITORY_ERROR_REASON_REQUIRED = 1 [(errors.v1.code) = 403];
  // The repository does not seem to be operational
  // a previous validation has failed
  OCI_REPOSITORY_ERROR_REASON_INVALID = 2 [(errors.v1.code) = 403];
}