{
  "$id": "attestation.v1.PolicyEvaluation.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "description": "A policy executed against an attestation or material",
  "patternProperties": {
    "^(materialName)$": {
      "type": "string"
    },
    "^(referenceDigest)$": {
      "description": "fully qualified reference to the policy\n i.e\n http://my-domain.com/foo.yaml\n file://foo.yaml\n chainloop://my-provider.com/foo@sha256:1234\n NOTE: embedded policies will not have a reference",
      "type": "string"
    },
    "^(referenceName)$": {
      "type": "string"
    },
    "^(skipReasons)$": {
      "description": "Evaluation messages, intended to communicate evaluation errors (invalid input)",
      "items": {
        "type": "string"
      },
      "type": "array"
    }
  },
  "properties": {
    "annotations": {
      "additionalProperties": {
        "type": "string"
      },
      "propertyNames": {
        "type": "string"
      },
      "type": "object"
    },
    "body": {
      "description": "the body of the policy. This field will be empty if there is a FQDN reference to the policy",
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "material_name": {
      "type": "string"
    },
    "name": {
      "description": "The policy name from the policy spec",
      "type": "string"
    },
    "reference_digest": {
      "description": "fully qualified reference to the policy\n i.e\n http://my-domain.com/foo.yaml\n file://foo.yaml\n chainloop://my-provider.com/foo@sha256:1234\n NOTE: embedded policies will not have a reference",
      "type": "string"
    },
    "reference_name": {
      "type": "string"
    },
    "skip_reasons": {
      "description": "Evaluation messages, intended to communicate evaluation errors (invalid input)",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "skipped": {
      "description": "whether this evaluation was skipped or not (because of an invalid input, for example)",
      "type": "boolean"
    },
    "sources": {
      "description": "Base64 representation of run scripts. It might be empty if there is a FQDN reference to the policy",
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "type": {
      "anyOf": [
        {
          "enum": [
            "MATERIAL_TYPE_UNSPECIFIED",
            "STRING",
            "CONTAINER_IMAGE",
            "ARTIFACT",
            "SBOM_CYCLONEDX_JSON",
            "SBOM_SPDX_JSON",
            "JUNIT_XML",
            "OPENVEX",
            "HELM_CHART",
            "SARIF",
            "EVIDENCE",
            "ATTESTATION",
            "CSAF_VEX",
            "CSAF_INFORMATIONAL_ADVISORY",
            "CSAF_SECURITY_ADVISORY",
            "CSAF_SECURITY_INCIDENT_RESPONSE",
            "GITLAB_SECURITY_REPORT",
            "ZAP_DAST_ZIP",
            "BLACKDUCK_SCA_JSON",
            "TWISTCLI_SCAN_JSON"
          ],
          "title": "Material Type",
          "type": "string"
        },
        {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      ],
      "description": "material type, if any, of the evaluated policy"
    },
    "violations": {
      "description": "The policy violations, if any",
      "items": {
        "$ref": "attestation.v1.PolicyEvaluation.Violation.schema.json"
      },
      "type": "array"
    },
    "with": {
      "additionalProperties": {
        "type": "string"
      },
      "description": "arguments, as they come from the policy attachment",
      "propertyNames": {
        "type": "string"
      },
      "type": "object"
    }
  },
  "title": "Policy Evaluation",
  "type": "object"
}
