// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// CASClient is an autogenerated mock type for the CASClient type
type CASClient struct {
	mock.Mock
}

// Download provides a mock function with given fields: ctx, backendType, secretID, w, digest
func (_m *CASClient) Download(ctx context.Context, backendType string, secretID string, w io.Writer, digest string) error {
	ret := _m.Called(ctx, backendType, secretID, w, digest)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, io.Writer, string) error); ok {
		r0 = rf(ctx, backendType, secretID, w, digest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Upload provides a mock function with given fields: ctx, backendType, secretID, content, filename, digest
func (_m *CASClient) Upload(ctx context.Context, backendType string, secretID string, content io.Reader, filename string, digest string) error {
	ret := _m.Called(ctx, backendType, secretID, content, filename, digest)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, io.Reader, string, string) error); ok {
		r0 = rf(ctx, backendType, secretID, content, filename, digest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCASClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewCASClient creates a new instance of CASClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCASClient(t mockConstructorTestingTNewCASClient) *CASClient {
	mock := &CASClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
