//
// Copyright 2024 The Chainloop Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package controlplane.config.v1;

import "buf/validate/validate.proto";
import "controlplane/v1/response_messages.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/chainloop-dev/chainloop/app/controlplane/pkg/conf/controlplane/config/v1;v1";

// OnboardingSpec is a configuration to automatically onboard users in organizations with specific roles
message OnboardingSpec {
  // Name of the organization
  string name = 1 [(buf.validate.field).string.min_len = 1];
  // Role to assign to the user
  controlplane.v1.MembershipRole role = 2 [
    (buf.validate.field).enum = {
      not_in: [0]
    },
    (buf.validate.field).enum.defined_only = true
  ];
}

message AllowList {
  // allow_list is a list of allowed email addresses or domains
  // for example ["@chainloop.dev", "foo@mycompany.org"]
  repeated string rules = 1;
  // Custom message to show when a user is not allowed
  string custom_message = 2;
  // The list of routes that will be affected by this middleware, by default all of them
  repeated string selected_routes = 3;
  // Whether to treat the information stored in the user table as the source of truth
  // if false, the allowList rules will be used as source of truth
  // if true, the allowList rules will be used as a starting point to populate the property in the DB
  bool allow_db_overrides = 4;
}

message DatabaseConfig {
  string driver = 1;
  string source = 2;
  int32 min_open_conns = 3;
  int32 max_open_conns = 4;
  google.protobuf.Duration max_conn_idle_time = 5;
}