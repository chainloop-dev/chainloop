apiVersion: workflowcontract.chainloop.dev/v1
kind: Policy
metadata:
  name: cdx-fresh
  description: Checks that SBOM is maximum of 30 days old
  annotations:
    category: quickstart
spec:
  policies:
    - embedded: |
        package main

        import rego.v1

        ################################
        # Common section do NOT change #
        ################################

        result := {
        	"skipped": skipped,
        	"violations": violations,
        	"skip_reason": skip_reason,
        	"ignore": ignore,
        }

        default skip_reason := ""

        skip_reason := m if {
        	not valid_input
        	m := "invalid input"
        }

        default skipped := true

        skipped := false if valid_input

        default ignore := false

        ########################################
        # EO Common section, custom code below #
        ########################################
        # Validates if the input is valid and can be understood by this policy
        valid_input := true

        limit := 30
        nanosecs_per_second := (1000 * 1000) * 1000
        nanosecs_per_day := ((24 * 60) * 60) * nanosecs_per_second
        maximum_age := limit * nanosecs_per_day

        # If the input is valid, check for any policy violation here
        violations contains msg if {
        	sbom_ns = time.parse_rfc3339_ns(input.metadata.timestamp)
        	exceeding = time.now_ns() - (sbom_ns + maximum_age)
        	exceeding > 0
        	msg := sprintf("SBOM created at: %s which is too old (freshness limit set to %d days)", [input.metadata.timestamp, limit])
        }
      kind: SBOM_CYCLONEDX_JSON
