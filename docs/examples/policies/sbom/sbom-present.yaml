# Copyright 2024 The Chainloop Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: workflowcontract.chainloop.dev/v1
kind: Policy
metadata:
  name: sbom-present
  description: Checks a SBOM is present in the attestation materials
  annotations:
    category: sbom
spec:
  type: ATTESTATION
  embedded: |
    package main
      
    # Verifies there is a SBOM material, even if not enforced by contract
    
    import future.keywords.contains
    import future.keywords.in
    
    violations[msg] {
      not has_sbom
      msg := "missing SBOM material"
    }
    
    # Collect all material types
    kinds contains kind {
      some material in input.predicate.materials
      kind := material.annotations["chainloop.material.type"]
    }
      
    has_sbom {
      values := ["SBOM_SPDX_JSON","SBOM_CYCLONEDX_JSON"]      
      kinds[_] == values[_]
    }
